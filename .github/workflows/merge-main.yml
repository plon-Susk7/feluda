name: Merge PR to main

permissions:
  contents: read

on:
  pull_request:
    types:
      - closed
    branches:
      - main

jobs:
  release:
    if: github.event.pull_request.merged == true
    runs-on: ubuntu-latest
    concurrency: release
    permissions:
      contents: write
    # Map a step output to a job output
    outputs:
      released: ${{ steps.release.outputs.released }}
      tag: ${{ steps.release.outputs.tag }}

    steps:
      - name: Checkout code
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          fetch-depth: 0

      - name: Setup Python version
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: '3.11'

      - name: Python Semantic Release
        id: release
        uses: python-semantic-release/python-semantic-release@c82bd673c30da94a02e039963c8c4c8a51758096 # v9.1.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}

  version_bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4.1.1
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Check for changes in feluda
        id: check_feluda
        run: |
          CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- feluda)
          if [ -n "$CHANGES" ]; then
            echo "Changes detected in feluda"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in feluda"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      - name: Check for changes in operators/image_vec_rep_resnet
        id: check_image_vec_rep_resnet
        run: |
          CHANGES=$(git diff --name-only ${{ github.event.before }} ${{ github.sha }} -- operators/image_vec_rep_resnet)
          if [ -n "$CHANGES" ]; then
            echo "Changes detected in operators/image_vec_rep_resnet"
            echo "has_changes=true" >> $GITHUB_OUTPUT
          else
            echo "No changes in operators/image_vec_rep_resnet"
            echo "has_changes=false" >> $GITHUB_OUTPUT
          fi

      # - name: Setup Python version
      #   uses: actions/setup-python@v5.0.0
      #   with:
      #     python-version: '3.11'

      # - name: Install semantic-release
      #   run: |
      #     pip install python-semantic-release

      - name: Release feluda
        if: steps.check_feluda.outputs.has_changes == 'true'
        uses: python-semantic-release/python-semantic-release@v9.12.0
        with:
          directory: ./
          github_token: ${{ secrets.GITHUB_TOKEN }}

      - name: Release image_vec_rep_resnet
        if: steps.check_image_vec_rep_resnet.outputs.has_changes == 'true'
        uses: python-semantic-release/python-semantic-release@v9.12.0
        with:
          directory: ./operators/image_vec_rep_resnet
          github_token: ${{ secrets.GITHUB_TOKEN }}

  docker:
    needs: release
    if: needs.release.outputs.released == 'true'
    runs-on: ubuntu-latest
    steps:
      - name: Set up QEMU
        uses: docker/setup-qemu-action@68827325e0b33c7199eb31dd4e31fbe9023e06e3 # v3.0.0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@2b51285047da1547ffb1b2203d8be4c0af6b1f20 # v3.2.0

      - name: Login to Docker Hub
        uses: docker/login-action@e92390c5fb421da1463c202d546fed0ec5c39f20 # v.3.1.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Publish vidvec amd64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/vidvec/Dockerfile.video_worker
          platforms: linux/amd64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-vidvec:worker-amd64-${{ needs.release.outputs.tag }}

      - name: Publish vidvec arm64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/vidvec/Dockerfile.video_worker_graviton
          platforms: linux/arm64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-vidvec:worker-arm64-${{ needs.release.outputs.tag }}

      - name: Publish audiovec amd64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/audiovec/Dockerfile.audio_worker
          platforms: linux/amd64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-audiovec:worker-amd64-${{ needs.release.outputs.tag }}

      - name: Publish audiovec arm64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/audiovec/Dockerfile.audio_worker_graviton
          platforms: linux/arm64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-audiovec:worker-arm64-${{ needs.release.outputs.tag }}

      - name: Publish media hash amd64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/hash/Dockerfile.hash_worker
          platforms: linux/amd64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-hash:worker-amd64-${{ needs.release.outputs.tag }}

      - name: Publish media hash arm64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/hash/Dockerfile.hash_worker_graviton
          platforms: linux/arm64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-hash:worker-arm64-${{ needs.release.outputs.tag }}

      - name: Publish media worker amd64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/media/Dockerfile.media_worker
          platforms: linux/amd64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-media:worker-amd64-${{ needs.release.outputs.tag }}

      - name: Publish media worker arm64 worker to dockerhub
        uses: docker/build-push-action@2cdde995de11925a030ce8070c3d77a52ffcf1c0 # v5.3.0
        with:
          context: "{{defaultContext}}:src/"
          file: worker/media/Dockerfile.media_worker_graviton
          platforms: linux/arm64
          build-args: |
            "UID=1000"
            "GID=1000"
          push: true
          tags: tattletech/feluda-operator-media:worker-arm64-${{ needs.release.outputs.tag }}

#      - name: deploy to cluster
#        uses: steebchen/kubectl@v2.0.0
#        with: # defaults to latest kubectl binary version
#          config: ${{ secrets.PROD_KUBE_CONFIG_DATA }}
#          command: set image --record deployment/feluda-server feluda-server=tattletech/feluda-server:${{ steps.vars.outputs.sha_short }}
#      - name: verify deployment
#        uses: steebchen/kubectl@v2.0.0
#        with:
#          config: ${{ secrets.PROD_KUBE_CONFIG_DATA }}
#          version: v1.21.0 # specify kubectl binary version explicitly
#          command: rollout status deployment/feluda-server
